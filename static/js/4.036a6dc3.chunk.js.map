{"version":3,"sources":["App/Components/Children/MiddleChild.js","App/Components/Middle.js"],"names":["commonComprator","prevProps","nextProps","JSON","stringify","BoxInput","memo","fireSearch","searchValue","setSearchValue","className","id","type","placeholder","autoComplete","onKeyUp","onChange","e","target","value","Content","loading","data","fire","Row","Col","src","LoadGif","alt","length","map","ani","md","style","backgroundImage","image_url","replace","backgroundPosition","backgroundSize","onClick","mal_id","title","Season","SeasonData","setCurrent","current","dat","i","Middle","useContext","CurrentContext","SearchContext","DataContext","DetailContext","time","useMemo","Date","getFullYear"],"mappings":"mLAIMA,EAAkB,SAACC,EAAWC,GAAZ,OACtBC,KAAKC,UAAUH,KAAeE,KAAKC,UAAUF,IAEzCG,EAAWC,gBACf,YAAkD,IAA/CC,EAA8C,EAA9CA,WAAYC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAC1B,OACE,sBAAKC,UAAU,YAAYC,GAAG,eAA9B,UACE,4CACA,uBACEC,KAAK,OACLC,YAAY,YACZF,GAAG,eACHG,aAAa,MACbC,QAASR,EACTS,SAAU,SAACC,GAAD,OAAOR,EAAeQ,EAAEC,OAAOC,QACzCA,MAAOX,UAKf,SAACP,EAAWC,GAAZ,OAA0BD,EAAUO,cAAgBN,EAAUM,eAG1DY,EAAUd,gBACd,gBAAGe,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,KAAlB,OACE,eAACC,EAAA,EAAD,CAAKd,UAAU,UAAUC,GAAG,iBAA5B,UACGU,GACC,cAACI,EAAA,EAAD,CAAKf,UAAU,0BAAf,SACE,qBAAKgB,IAAKC,IAASC,IAAI,YAGzBP,GACAC,EAAKO,OAAS,GACdP,EAAKQ,KAAI,SAACC,GAAD,OACP,eAACN,EAAA,EAAD,CAAKO,GAAI,EAAGtB,UAAU,aAAtB,UACE,qBACEA,UAAU,aACVuB,MAAO,CACLC,gBAAgB,OAAD,OAASH,EAAII,UAAUC,QAAQ,MAAO,QAAtC,KACfC,mBAAoB,SACpBC,eAAgB,SAElBC,QAAS,kBAAMhB,EAAKQ,EAAIS,WAE1B,6BAAKT,EAAIU,UAV6BV,EAAIS,gBAepDxC,GAGI0C,EAASpC,gBACb,gBAAGqC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,QAA3B,OACE,cAACrB,EAAA,EAAD,CAAKd,UAAU,SAAf,SACGiC,EAAWb,KAAI,SAACgB,EAAKC,GAAN,OACd,sBACErC,UAAS,sBACPmC,IAAYC,EAAM,qBAAuB,IAG3CP,QAAS,kBAAMK,EAAWE,IAL5B,SAOGA,GAHIC,WAQb,SAAC9C,EAAWC,GAAZ,OAA0BD,EAAU4C,UAAY3C,EAAU2C,WC1B7CG,UAtCf,WAAmB,IAAD,EAIZC,qBAAWC,KAFbP,EAFc,EAEdA,WAFc,IAGdE,QAAWA,EAHG,EAGHA,QAASD,EAHN,EAGMA,WAHN,EAKoCK,qBAAWE,KAAvD3C,EALQ,EAKRA,YAAaC,EALL,EAKKA,eAAgBF,EALrB,EAKqBA,WALrB,EAMU0C,qBAAWG,KAA7B/B,EANQ,EAMRA,QAASC,EAND,EAMCA,KACTC,EAAS0B,qBAAWI,KAApB9B,KACF+B,EAAOC,mBAAQ,kBAAM,IAAIC,OAAQ,IAEvC,OACE,0BAAS9C,UAAU,aAAnB,UACE,qBAAIC,GAAG,eAAP,0BAAoC2C,EAAKG,iBAEzC,cAACf,EAAD,CACEC,WAAYA,EACZC,WAAYA,EACZC,QAASA,IAGX,cAACxC,EAAD,CACEG,YAAaA,EACbC,eAAgBA,EAChBF,WAAYA,IAGd,sBAAKG,UAAU,SAAf,UACE,0CACA,oBAAIC,GAAG,aAAP,SACe,KAAZkC,EAAA,qBAA+BS,EAAKG,eAAkBZ,OAI3D,cAACzB,EAAD,CAASE,KAAMA,EAAMD,QAASA,EAASE,KAAMA","file":"static/js/4.036a6dc3.chunk.js","sourcesContent":["import { memo } from \"react\";\nimport { LoadGif } from \"../../Util/Image\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst commonComprator = (prevProps, nextProps) =>\n  JSON.stringify(prevProps) === JSON.stringify(nextProps);\n\nconst BoxInput = memo(\n  ({ fireSearch, searchValue, setSearchValue }) => {\n    return (\n      <div className=\"box-input\" id=\"input-mobile\">\n        <h2>Find Anime</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          id=\"search-input\"\n          autoComplete=\"off\"\n          onKeyUp={fireSearch}\n          onChange={(e) => setSearchValue(e.target.value)}\n          value={searchValue}\n        />\n      </div>\n    );\n  },\n  (prevProps, nextProps) => prevProps.searchValue === nextProps.searchValue\n);\n\nconst Content = memo(\n  ({ loading, data, fire }) => (\n    <Row className=\"content\" id=\"middle-content\">\n      {loading && (\n        <Col className=\"col-12 text-center mt-5\">\n          <img src={LoadGif} alt=\"Load\" />\n        </Col>\n      )}\n      {!loading &&\n        data.length > 0 &&\n        data.map((ani) => (\n          <Col md={3} className=\"col-6 mb-4\" key={ani.mal_id}>\n            <div\n              className=\"img-poster\"\n              style={{\n                backgroundImage: `url(${ani.image_url.replace(\"jpg\", \"webp\")})`,\n                backgroundPosition: \"center\",\n                backgroundSize: \"cover\",\n              }}\n              onClick={() => fire(ani.mal_id)}\n            />\n            <h3>{ani.title}</h3>\n          </Col>\n        ))}\n    </Row>\n  ),\n  commonComprator\n);\n\nconst Season = memo(\n  ({ SeasonData, setCurrent, current }) => (\n    <Row className=\"season\">\n      {SeasonData.map((dat, i) => (\n        <span\n          className={`link-season ${\n            current === dat ? \"link-season-active\" : \"\"\n          }`}\n          key={i}\n          onClick={() => setCurrent(dat)}\n        >\n          {dat}\n        </span>\n      ))}\n    </Row>\n  ),\n  (prevProps, nextProps) => prevProps.current === nextProps.current\n);\n\nexport { BoxInput, Content, Season };\n","import { useMemo, useContext } from \"react\";\n\nimport { SearchContext } from \"../Context/SearchContext\";\nimport { CurrentContext } from \"../Context/CurrentContext\";\nimport { DataContext } from \"../Context/DataContext\";\nimport { DetailContext } from \"../Context/DetailContext\";\nimport { BoxInput, Content, Season } from \"./Children/MiddleChild\";\n\nfunction Middle() {\n  const {\n    SeasonData,\n    current: { current, setCurrent },\n  } = useContext(CurrentContext);\n  const { searchValue, setSearchValue, fireSearch } = useContext(SearchContext);\n  const { loading, data } = useContext(DataContext);\n  const { fire } = useContext(DetailContext);\n  const time = useMemo(() => new Date(), []);\n\n  return (\n    <section className=\"web-middle\">\n      <h2 id=\"title-season\">Anime Season {time.getFullYear()}</h2>\n\n      <Season\n        SeasonData={SeasonData}\n        setCurrent={setCurrent}\n        current={current}\n      />\n\n      <BoxInput\n        searchValue={searchValue}\n        setSearchValue={setSearchValue}\n        fireSearch={fireSearch}\n      />\n\n      <div className=\"result\">\n        <p>Result of</p>\n        <h1 id=\"hero-title\">\n          {current === \"\" ? `Top Airing ${time.getFullYear()}` : current}\n        </h1>\n      </div>\n\n      <Content data={data} loading={loading} fire={fire} />\n    </section>\n  );\n}\n\nexport default Middle;\n"],"sourceRoot":""}